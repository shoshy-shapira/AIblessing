import React, { useState } from 'react';
import styled from 'styled-components';
import { Box, FormControl, InputLabel, MenuItem, Select, TextField } from '@mui/material';
import { Button } from '@mui/base';
import callOpenAI from '../js.js';
import  '../css/Home.css'

const types = [
    { id: 10, name: 'יומהולדת' },
    { id: 20, name: 'חתונה' },
    { id: 30, name: 'בר מצווה' },
    { id: 40, name: 'יום נישואין' },
    { id: 50, name: 'בת מצווה' },
    { id: 60, name: 'מורה' },
    { id: 70, name: 'לידה' },
];
const typesTeacher = [
    { id: 10, name: 'פורים' },
    { id: 20, name: 'פסח' },
    { id: 30, name: 'סוף שנה ' },
    { id: 40, name: 'ראש השנה' },
];


function Home() {
    const [type, setType] = useState('');
    const [showAgeField, setShowAgeField] = useState(false);
    const [showTypesTeacher, setshowTypesTeacher] = useState(false);
    const [result, setResult] = useState('');
    const [teacher, setTeacher] = useState('');

    const handleChange = (event) => {
        const selectedValue = event.target.value;
        setType(selectedValue);

        setShowAgeField(event.target.value === 10);
        setshowTypesTeacher(event.target.value === 60);
        setTeacher('');//אתחול מורה
    };

    //עדכון של סוג מורה
    const handleTeacherChange = (event) => {
        const selectedTeacher = event.target.value;
        setTeacher(selectedTeacher);
    };



    const handeleSearchBlessing = async () => {
        if (!type) {
            alert('בבקשה בחר סוג ברכה');
            return;
        }

        const selectType = types.find((t) => t.id === parseInt(type, 10)).name;
        const blessingType = document.getElementById('blessing-type-input').value;
        const atmosphere = document.getElementById('atmosphere-input').value;
        const age = showAgeField ? document.getElementById('outlined-number').value : '';
        let teacherType = '';
        if (showTypesTeacher && teacher) {//בודק אם בחרו מורה
            teacherType = typesTeacher.find((t) = t.id === parseInt(teacher, 10)).name;
        }
        let thread = `כתוב לי ברכה שכתובה בצורה יפה מאוד וברמה גבוהה עבור ${selectType} שתהיה ב ${blessingType} באוירה ${atmosphere}`;
        if (age) {
            thread += ` לגיל ${age}`;
        }
        if (teacherType) {
            thread += ` ל ${teacherType}`;
        }

        try {
            const openAIResult = await callOpenAI(thread);
            const parsedResult = JSON.parse(openAIResult);
            setResult(parsedResult.greeting || openAIResult);
        } catch (error) {
            console.error("error in handeleSearchBlessing", error);
            setResult("ארעה שגיאה בעת הפניה ל OpenAI")
        }
    };

    return (
        <>
            <div className="blessing-container">
                <h1>ברכות ואיחולים</h1>
                <FormControl className="form-control" fullWidth>
                    <label className="input-label">אני רוצה את הברכה עבור</label>
                    <Select
                        className="select"
                        labelId="demo-simple-select-label"
                        id="demo-simple-select type"
                        value={type}
                        onChange={handleChange}
                        required
                    >
                        {types.map((t) => (
                            <option key={t.id} value={t.id}>
                                {t.name}
                            </option>))}
                    </Select>
                </FormControl>

                {showTypesTeacher && (
                    <div className="form-control">
                        <label className="input-label">לכבוד</label>
                        <Select
                            className="select"
                            id=" typesTeacher"
                            value={teacher}
                            onChange={handleTeacherChange}
                            required
                        >
                            {typesTeacher.map((t) => (
                                <option key={t.id} value={t.id}>
                                    {t.name}
                                </option>))}
                        </Select>
                    </div>
                )}


                {showAgeField && (

                    <div className="form-control">
                        <label className="input-label">גיל</label>
                        <input className="text-field" type="number" id="age-input" />
                    </div>

                )}
                <div className="form-control">
                    <label className="input-label" >סוג הברכה</label>
                    <input className="text-field" type="text" id="blessing-type-input" />

                    <div className="form-control">
                        <label className="input-label">אווירה</label>
                        <input className="text-field" type="text" id="atmosphere-input" />
                    </div>
                    <button className="button" onClick={handeleSearchBlessing}>חפש</button>
                    {result && <div className="result-container">{result}</div>}
                </div>
            </div>

        </>
    )

} export default Home;

